const float dist = 60.0;
const float speed = 15.0;


vec2 doRipple(vec2 pos, vec2 uv,float time){

	if (time <0.0){
		return vec2(0.0);
	}

    vec2 so = pos/ iResolution.xy;
	vec2 pos2 = vec2(uv - so); 	  //wave origin
	vec2 pos2n = normalize(pos2);

	float len = length(pos2);
   float coef =  exp(-3.0*time)/2.0;
   // float coef =  len*time*time*time;
   // float coef =  pow(len,time);

    float ff = len*dist-(time*speed );
    vec2 uv2;
    
    float frontWave = speed * (time)/dist;
    if (frontWave > len){
    uv2 = uv*(sin(ff)*coef);
    }else {
    uv2 = uv *0.0;
    }
    return uv2; 
}


void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	vec2 uv = fragCoord.xy / iResolution.xy;
	vec2 so = iMouse.xy / iResolution.xy;


	vec2 uv2 = doRipple(iMouse.xy,uv,iGlobalTime);

	fragColor = vec4(texture2D(iChannel0, uv + uv2));
}